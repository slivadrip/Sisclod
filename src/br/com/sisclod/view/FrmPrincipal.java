/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sisclod.view;

import br.com.sisclod.factory.Database;
import br.com.sisclod.relatorios.util.GeradorRelatorio;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author adriano
 */
public class FrmPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal(String user) {
        initComponents();
        //setSize(1366,788); 
        //  setResizable(false);
        setExtendedState(MAXIMIZED_BOTH);
        //data.setText(MostraData());
        jLabelUSer.setText(user.toUpperCase());
        //jHora.setText(MostraHora());

        Permissoes();

    }

    private FrmPrincipal() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public String getUser() {
        Connection conexao = null;
        String usuario;
        try {
            conexao = Database.getConnection();
        } catch (SQLException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        String user = jLabelUSer.getText().toUpperCase();
        String sql = "SELECT dsusuario FROM tbfuncionario WHERE dsLogin = '" + user + "'";

        PreparedStatement stmt = null;
        try {
            stmt = conexao.prepareStatement(sql);
        } catch (SQLException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        ResultSet rs = null;
        try {
            rs = stmt.executeQuery();
        } catch (SQLException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            while (rs.next()) {

                usuario = rs.getString("dsusuario");
                return usuario;
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;

    }

    public void Permissoes() {
        String a = getUser();
        System.out.println(a);
        String secretaria = "SECRETARIA";
        String odontologista = "ODONTOLOGISTA";

        if (a == null ? secretaria == null : a.equals(secretaria)) {
            jButtonFuncionarios.setEnabled(false);
            jButtonProcedimentos.setEnabled(false);
            jMenuItemEmpresa.setEnabled(false);
            jMenuRelatorio.setEnabled(false);
            jMenuItemfuncionario.setEnabled(false);
            jMenuItemProcedimentos.setEnabled(false);
            jMenuItemProced.setEnabled(false);
            jMenuItemFunc.setEnabled(false);
            jButtonVisualizar.setEnabled(false);
            jMenuItemVisualizar.setEnabled(false);

        } else if (a == null ? odontologista == null : a.equals(odontologista)) {
            jButtonFuncionarios.setEnabled(false);
            jButtonOrçamento.setEnabled(false);
            jButtonPacientes.setEnabled(false);
            jButtonAgenda.setEnabled(false);
            jMenuOrcamento.setEnabled(false);
            jMenuRelatorio.setEnabled(false);
            jMenuItemPaciente.setEnabled(false);
            jMenuItemAgendaAte.setEnabled(false);
            jMenuItemCidade.setEnabled(false);
            jMenuItemEmpresa.setEnabled(false);
            jMenuItemOrcamento.setEnabled(false);
            jMenuItemFunc.setEnabled(false);
            jMenuItemfuncionario.setEnabled(false);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonPacientes = new javax.swing.JButton();
        jButtonFuncionarios = new javax.swing.JButton();
        jButtonOrçamento = new javax.swing.JButton();
        jButtonProcedimentos = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jButtonAgenda = new javax.swing.JButton();
        jButtonVisualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        data = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jHora = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelUSer = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemPaciente = new javax.swing.JMenuItem();
        jMenuItemFunc = new javax.swing.JMenuItem();
        jMenuItemCidade = new javax.swing.JMenuItem();
        jMenuItemProced = new javax.swing.JMenuItem();
        jMenuItemEmpresa = new javax.swing.JMenuItem();
        jMenuVisualizae = new javax.swing.JMenu();
        jMenuItemAgendaAte = new javax.swing.JMenuItem();
        jMenuItemVisualizar = new javax.swing.JMenuItem();
        jMenuOrcamento = new javax.swing.JMenu();
        jMenuItemOrcamento = new javax.swing.JMenuItem();
        jMenuRelatorio = new javax.swing.JMenu();
        jMenuItemAgenda = new javax.swing.JMenuItem();
        jMenuItemProcedimentos = new javax.swing.JMenuItem();
        jMenuItemPacientes = new javax.swing.JMenuItem();
        jMenuItemfuncionario = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SisClod");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jButtonPacientes.setIcon(new javax.swing.ImageIcon("C:\\Users\\Dih\\Desktop\\icones\\IOS\\Contacts.png")); // NOI18N
        jButtonPacientes.setMnemonic('P');
        jButtonPacientes.setToolTipText("Pacientes");
        jButtonPacientes.setPreferredSize(new java.awt.Dimension(90, 74));
        jButtonPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPacientesActionPerformed(evt);
            }
        });

        jButtonFuncionarios.setIcon(new javax.swing.ImageIcon("C:\\Users\\Dih\\Desktop\\icones\\IOS\\Photo Booth.png")); // NOI18N
        jButtonFuncionarios.setToolTipText("Funcionários");
        jButtonFuncionarios.setPreferredSize(new java.awt.Dimension(90, 74));
        jButtonFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFuncionariosActionPerformed(evt);
            }
        });

        jButtonOrçamento.setIcon(new javax.swing.ImageIcon("C:\\Users\\Dih\\Desktop\\icones\\IOS\\Reminders.png")); // NOI18N
        jButtonOrçamento.setToolTipText("Orçamentos");
        jButtonOrçamento.setPreferredSize(new java.awt.Dimension(90, 74));
        jButtonOrçamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrçamentoActionPerformed(evt);
            }
        });

        jButtonProcedimentos.setIcon(new javax.swing.ImageIcon("C:\\Users\\Dih\\Desktop\\icones\\editr\\proc.PNG")); // NOI18N
        jButtonProcedimentos.setToolTipText("Procedimentos");
        jButtonProcedimentos.setPreferredSize(new java.awt.Dimension(90, 74));
        jButtonProcedimentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProcedimentosActionPerformed(evt);
            }
        });

        jButtonSair.setIcon(new javax.swing.ImageIcon("C:\\Users\\Dih\\Desktop\\icones\\editr\\x.PNG")); // NOI18N
        jButtonSair.setToolTipText("Sair");
        jButtonSair.setPreferredSize(new java.awt.Dimension(90, 74));
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        jButtonAgenda.setIcon(new javax.swing.ImageIcon("C:\\Users\\Dih\\Desktop\\icones\\editr\\Calendar.png")); // NOI18N
        jButtonAgenda.setToolTipText("Agenda");
        jButtonAgenda.setPreferredSize(new java.awt.Dimension(90, 74));
        jButtonAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgendaActionPerformed(evt);
            }
        });

        jButtonVisualizar.setIcon(new javax.swing.ImageIcon("C:\\Users\\Dih\\Desktop\\icones\\editr\\Calendar (2).png")); // NOI18N
        jButtonVisualizar.setPreferredSize(new java.awt.Dimension(90, 74));
        jButtonVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVisualizarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Pacientes");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Funcionários");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Procedimentos");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Orçamento");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Agenda");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Buscar Agenda");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Sair");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonFuncionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonProcedimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonOrçamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5)))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel9)))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonVisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(374, 374, 374))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(73, 73, 73)
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonFuncionarios, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonProcedimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOrçamento, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonVisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel4)))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1395, 120);

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\Dih\\Desktop\\sicldo\\logo2.jpg")); // NOI18N
        getContentPane().add(jLabel6);
        jLabel6.setBounds(330, 140, 610, 550);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        data.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        data.setText("jLabel10");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Data..:");

        jHora.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jHora.setText("hora");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Hora..:");

        jLabelUSer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelUSer.setText("jLabel12");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Usuário.:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(927, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelUSer)
                .addGap(58, 58, 58)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jHora, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelUSer)
                        .addComponent(jLabel13))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHora, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 650, 1390, 50);

        jLabel12.setText("jLabel12");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(870, 660, 40, 14);

        jMenu1.setText("Cadastros");

        jMenuItemPaciente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, 0));
        jMenuItemPaciente.setText("Pacientes");
        jMenuItemPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPacienteActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemPaciente);

        jMenuItemFunc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F10, 0));
        jMenuItemFunc.setText("Funcionários");
        jMenuItemFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFuncActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemFunc);

        jMenuItemCidade.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
        jMenuItemCidade.setText("Cidades");
        jMenuItemCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCidadeActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemCidade);

        jMenuItemProced.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        jMenuItemProced.setText("Procedimentos");
        jMenuItemProced.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemProcedActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemProced);

        jMenuItemEmpresa.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jMenuItemEmpresa.setText("Empresas");
        jMenuItemEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEmpresaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemEmpresa);

        jMenuBar1.add(jMenu1);

        jMenuVisualizae.setText("Agenda");

        jMenuItemAgendaAte.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemAgendaAte.setText("Agendar Atendimento");
        jMenuItemAgendaAte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAgendaAteActionPerformed(evt);
            }
        });
        jMenuVisualizae.add(jMenuItemAgendaAte);

        jMenuItemVisualizar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F10, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemVisualizar.setText("Visualizar agenda");
        jMenuItemVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVisualizarActionPerformed(evt);
            }
        });
        jMenuVisualizae.add(jMenuItemVisualizar);

        jMenuBar1.add(jMenuVisualizae);

        jMenuOrcamento.setText("Orçamentos");

        jMenuItemOrcamento.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOrcamento.setText("Orçamento");
        jMenuItemOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOrcamentoActionPerformed(evt);
            }
        });
        jMenuOrcamento.add(jMenuItemOrcamento);

        jMenuBar1.add(jMenuOrcamento);

        jMenuRelatorio.setText("Relatórios");

        jMenuItemAgenda.setText("Agenda");
        jMenuItemAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAgendaActionPerformed(evt);
            }
        });
        jMenuRelatorio.add(jMenuItemAgenda);

        jMenuItemProcedimentos.setText("Procedimentos");
        jMenuItemProcedimentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemProcedimentosActionPerformed(evt);
            }
        });
        jMenuRelatorio.add(jMenuItemProcedimentos);

        jMenuItemPacientes.setText("Paciente");
        jMenuItemPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPacientesActionPerformed(evt);
            }
        });
        jMenuRelatorio.add(jMenuItemPacientes);

        jMenuItemfuncionario.setText("Funcionário");
        jMenuItemfuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemfuncionarioActionPerformed(evt);
            }
        });
        jMenuRelatorio.add(jMenuItemfuncionario);

        jMenuBar1.add(jMenuRelatorio);

        jMenu4.setText("Sair");

        jMenuItem7.setText("Sair do Sistema");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String MostraData() {
        //pega data do computador
        Date data = new Date();
        //cria o formatador
        SimpleDateFormat dformatador = new SimpleDateFormat("dd/MM/yyyy");
        // cria a string para armazenar data
        String sData = dformatador.format(data);

        //retorna o pedido
        return sData;
    }

    public String MostraHora() {
        //pega data para converter em horas
        Date data = new Date();
        //cria o formatador
        SimpleDateFormat hformatador = new SimpleDateFormat("hh:mm:ss");
        // cria a string
        String sHora = hformatador.format(data);
        return sHora;
    }
    private void jMenuItemPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPacienteActionPerformed
        String a = getUser();
        System.out.println(a);

        String adm = "ADMINISTRADOR";
        String adm2 = "SECRETARIA";
        System.out.println(adm);

        if ((a == null ? adm == null : a.equals(adm)) || (a == null ? adm2 == null : a.equals(adm2))) {
            FrmCadPacientes frm = null;
            try {
                frm = new FrmCadPacientes();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }


    }//GEN-LAST:event_jMenuItemPacienteActionPerformed

    private void jMenuItemCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCidadeActionPerformed

        String a = getUser();
        System.out.println(a);
        String adm = "ADMINISTRADOR";
        System.out.println(adm);

        if (a == null ? adm == null : a.equals(adm)) {
            FrmCadCidade frm = null;
            try {
                frm = new FrmCadCidade();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }
    }//GEN-LAST:event_jMenuItemCidadeActionPerformed

    private void jMenuItemFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFuncActionPerformed
        String a = getUser();
        System.out.println(a);
        String adm = "ADMINISTRADOR";
        System.out.println(adm);

        if (a == null ? adm == null : a.equals(adm)) {
            FrmCadFuncionario frm = null;
            try {
                frm = new FrmCadFuncionario();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }
    }//GEN-LAST:event_jMenuItemFuncActionPerformed

    private void jButtonPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPacientesActionPerformed
        String a = getUser();
        System.out.println(a);

        String adm = "ADMINISTRADOR";
        String adm2 = "SECRETARIA";
        System.out.println(adm);

        if ((a == null ? adm == null : a.equals(adm)) || (a == null ? adm2 == null : a.equals(adm2))) {
            FrmCadPacientes frm = null;
            try {
                frm = new FrmCadPacientes();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }


    }//GEN-LAST:event_jButtonPacientesActionPerformed

    private void jButtonProcedimentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProcedimentosActionPerformed

        String a = getUser();
        System.out.println(a);

        String adm = "ADMINISTRADOR";
        String adm2 = "ODONTOLOGISTA";
        System.out.println(adm);

        if ((a == null ? adm == null : a.equals(adm)) || (a == null ? adm2 == null : a.equals(adm2))) {

            FrmCadProcedimento frm = null;
            try {
                frm = new FrmCadProcedimento();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }

    }//GEN-LAST:event_jButtonProcedimentosActionPerformed

    private void jButtonOrçamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrçamentoActionPerformed
        String a = getUser();
        System.out.println(a);

        String adm = "ADMINISTRADOR";
        String adm2 = "SECRETARIA";
        System.out.println(adm);

        if ((a == null ? adm == null : a.equals(adm)) || (a == null ? adm2 == null : a.equals(adm2))) {

            FrmOrcamento frm = null;
            try {
                frm = new FrmOrcamento();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }


    }//GEN-LAST:event_jButtonOrçamentoActionPerformed

    private void jButtonAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgendaActionPerformed
        String a = getUser();
        System.out.println(a);

        String adm = "ADMINISTRADOR";
        String adm2 = "SECRETARIA";
        System.out.println(adm);

        if ((a == null ? adm == null : a.equals(adm)) || (a == null ? adm2 == null : a.equals(adm2))) {

            FrmAtendimento frm = null;
            try {
                frm = new FrmAtendimento();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }


    }//GEN-LAST:event_jButtonAgendaActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed

        int resposta = JOptionPane.showConfirmDialog(null, "Deseja sair do sistema", "Confirmar a saida", JOptionPane.YES_NO_OPTION);

        if (resposta == JOptionPane.YES_OPTION) {
            System.exit(0);

        } else {

        }

    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItemAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAgendaActionPerformed

        String a = getUser();
        System.out.println(a);
        String adm = "ADMINISTRADOR";
        System.out.println(adm);

        if (a == null ? adm == null : a.equals(adm)) {
            jDialogAgenda jdb = new jDialogAgenda(this, true);

            jdb.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }

    }//GEN-LAST:event_jMenuItemAgendaActionPerformed

    private void jMenuItemProcedimentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemProcedimentosActionPerformed
        String a = getUser();
        System.out.println(a);
        String adm = "ADMINISTRADOR";
        System.out.println(adm);

        if (a == null ? adm == null : a.equals(adm)) {
            JasperViewer jv = new JasperViewer(GeradorRelatorio.getRelatorioProcedimentos(), false);
            jv.setTitle("RELATÓRIO DE PROCEDIMENTOS");
            jv.setVisible(true);
            jv.toFront();
            jv.setExtendedState(jv.MAXIMIZED_BOTH);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }


    }//GEN-LAST:event_jMenuItemProcedimentosActionPerformed

    private void jMenuItemEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEmpresaActionPerformed

        String a = getUser();
        System.out.println(a);
        String adm = "ADMINISTRADOR";
        System.out.println(adm);

        if (a == null ? adm == null : a.equals(adm)) {
            FrmCadEmpresa frm = null;
            try {
                frm = new FrmCadEmpresa();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }
    }//GEN-LAST:event_jMenuItemEmpresaActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        Date dataSistema = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        data.setText(formato.format(dataSistema));

        Timer timer = new Timer(1000, new hora());
        timer.start();
    }//GEN-LAST:event_formWindowOpened

    private void jMenuItemProcedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemProcedActionPerformed
        String a = getUser();
        System.out.println(a);

        String adm = "ADMINISTRADOR";
        String adm2 = "ODONTOLOGISTA";
        System.out.println(adm);

        if ((a == null ? adm == null : a.equals(adm)) || (a == null ? adm2 == null : a.equals(adm2))) {

            FrmCadProcedimento frm = null;
            try {
                frm = new FrmCadProcedimento();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }
    }//GEN-LAST:event_jMenuItemProcedActionPerformed

    private void jMenuItemAgendaAteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAgendaAteActionPerformed
        String a = getUser();
        System.out.println(a);

        String adm = "ADMINISTRADOR";
        String adm2 = "SECRETARIA";
        System.out.println(adm);

        if ((a == null ? adm == null : a.equals(adm)) || (a == null ? adm2 == null : a.equals(adm2))) {

            FrmAtendimento frm = null;
            try {
                frm = new FrmAtendimento();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }


    }//GEN-LAST:event_jMenuItemAgendaAteActionPerformed

    private void jMenuItemOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOrcamentoActionPerformed
        String a = getUser();
        System.out.println(a);

        String adm = "ADMINISTRADOR";
        String adm2 = "SECRETARIA";
        System.out.println(adm);

        if ((a == null ? adm == null : a.equals(adm)) || (a == null ? adm2 == null : a.equals(adm2))) {

            FrmOrcamento frm = null;
            try {
                frm = new FrmOrcamento();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }


    }//GEN-LAST:event_jMenuItemOrcamentoActionPerformed

    private void jButtonFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFuncionariosActionPerformed
        String a = getUser();
        System.out.println(a);
        String adm = "ADMINISTRADOR";
        System.out.println(adm);

        if (a == null ? adm == null : a.equals(adm)) {
            FrmCadFuncionario frm = null;
            try {
                frm = new FrmCadFuncionario();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }
    }//GEN-LAST:event_jButtonFuncionariosActionPerformed

    private void jButtonVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVisualizarActionPerformed

        String a = getUser();
        System.out.println(a);
        String adm = "ODONTOLOGISTA";
        String adm2 = "ADMINISTRADOR";

        System.out.println(adm);

        if ((a == null ? adm == null : a.equals(adm)) || (a == null ? adm2 == null : a.equals(adm2))) {
            FrmVisulizarAgenda frm = null;
            try {
                frm = new FrmVisulizarAgenda();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }

    }/*
        frm.show();    }//GEN-LAST:event_jButtonVisualizarActionPerformed
*/
    private void jMenuItemVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVisualizarActionPerformed
        String a = getUser();
        System.out.println(a);
        String adm = "ODONTOLOGISTA";
        String adm2 = "ADMINISTRADOR";
        System.out.println(adm);

        if ((a == null ? adm == null : a.equals(adm)) || (a == null ? adm2 == null : a.equals(adm2))) {
            FrmVisulizarAgenda frm = null;
            try {
                frm = new FrmVisulizarAgenda();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            frm.show();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }


    }//GEN-LAST:event_jMenuItemVisualizarActionPerformed

    private void jMenuItemPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPacientesActionPerformed
        String a = getUser();
        System.out.println(a);
        String adm = "ADMINISTRADOR";
        System.out.println(adm);

        if (a == null ? adm == null : a.equals(adm)) {
            JasperViewer jv = new JasperViewer(GeradorRelatorio.getRelatorioPacientes(), false);
            jv.setTitle("RELATÓRIO DE PACIENTES");
            jv.setVisible(true);
            jv.toFront();
            jv.setExtendedState(jv.MAXIMIZED_BOTH);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }


            }//GEN-LAST:event_jMenuItemPacientesActionPerformed

    private void jMenuItemfuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemfuncionarioActionPerformed
        String a = getUser();
        System.out.println(a);
        String adm = "ADMINISTRADOR";
        System.out.println(adm);

        if (a == null ? adm == null : a.equals(adm)) {
            JasperViewer jv = new JasperViewer(GeradorRelatorio.getRelatorioFuncionarios(), false);
            jv.setTitle("RELATÓRIO DE FUNCIONARIOS");
            jv.setVisible(true);

            jv.toFront();
            jv.setExtendedState(jv.MAXIMIZED_BOTH);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado!! Você não possui permissão para acessar!!");
        }

    }//GEN-LAST:event_jMenuItemfuncionarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel data;
    private javax.swing.JButton jButtonAgenda;
    private javax.swing.JButton jButtonFuncionarios;
    private javax.swing.JButton jButtonOrçamento;
    private javax.swing.JButton jButtonPacientes;
    private javax.swing.JButton jButtonProcedimentos;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonVisualizar;
    private javax.swing.JLabel jHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelUSer;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItemAgenda;
    private javax.swing.JMenuItem jMenuItemAgendaAte;
    private javax.swing.JMenuItem jMenuItemCidade;
    private javax.swing.JMenuItem jMenuItemEmpresa;
    private javax.swing.JMenuItem jMenuItemFunc;
    private javax.swing.JMenuItem jMenuItemOrcamento;
    private javax.swing.JMenuItem jMenuItemPaciente;
    private javax.swing.JMenuItem jMenuItemPacientes;
    private javax.swing.JMenuItem jMenuItemProced;
    private javax.swing.JMenuItem jMenuItemProcedimentos;
    private javax.swing.JMenuItem jMenuItemVisualizar;
    private javax.swing.JMenuItem jMenuItemfuncionario;
    private javax.swing.JMenu jMenuOrcamento;
    private javax.swing.JMenu jMenuRelatorio;
    private javax.swing.JMenu jMenuVisualizae;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
class hora implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            Calendar now = Calendar.getInstance();
            jHora.setText(String.format("%1$tH:%1$tM:%1$tS", now));
        }
    }

}
